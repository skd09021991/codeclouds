{"version":3,"sources":["assets/mountain_sunrise.png","assets/sunset.png","_context/locationContext.js","_context/currentWeatherContext.js","app_component/DayCard.js","app_component/HourlyChart.js","app_component/SeachButton.js","container/appContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LocationContext","createContext","LocationContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","location","setLocation","useEffect","Axios","get","then","res","_res$data","data","city","country","lat","lon","position","catch","error","console","log","react_default","a","createElement","Provider","value","setCurrentLocation","children","CurrentWeatherContext","CurrentWeatherContextProvider","locationContext","useContext","currentWeather","setCurrentWeather","_useState3","_useState4","selectedDayWeather","setSelectedDayWeather","_location$position","url","concat","axios","dailyData","daily","slice","hourlyData","hourly","DayCard","_ref","active","setactive","Cards","map","reading","index","newDate","Date","weekday","dt","setTime","maxCelsius","Math","round","temp","max","minCelsius","min","imgURL","weather","id","class","tabindex","key","Card","style","margin","border","display","onClick","i","handleClick","CardContent","Typography","fontSize","color","gutterBottom","className","moment","format","variant","component","marginBottom","alt","maxHeight","description","wind_speed","HourlyChart","state","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","componentDidMount","_this","times","tt","ap","hh","floor","dataset","set","forEach","hour","celsius","push","objectSpread","setState","todayWeather","this","pressure","humidity","sunrise","sunset","temp1","eve","Paper","marginTop","padding","borderRadius","elevation","Box","flexDirection","justifyContent","paddingTop","fontWeight","marginLeft","es","options","title","maintainAspectRatio","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","textAlign","width","square","src","require","unix","React","Component","SearchButton","placeInputRef","useRef","setValue","v","initPlaceAPI","autocomplete","window","google","maps","places","Autocomplete","current","event","addListener","place","getPlace","formatted_address","split","length","geometry","lng","Fragment","FormControl","TextField","onChange","e","target","inputRef","InputProps","endAdornment","LocationOn_default","AppContainer","Consumer","context","Container","SeachButton","CircularProgress","app_component_DayCard","HourlyChart_HourlyChart","size","App","_context_locationContext","currentWeatherContext","appContainer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.771a0e85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountain_sunrise.ae88fcb2.png\";","module.exports = __webpack_public_path__ + \"static/media/sunset.00ff431f.png\";","import React, { createContext, useState, useEffect } from 'react';\nimport Axios from 'axios';\n\nexport const LocationContext = createContext();\n\nconst LocationContextProvider = (props) => {\n\n  const [location, setLocation] = useState(\"\");\n  const setCurrentLocation = (location) => {\n    setLocation({ position: location })\n  };\n\n  useEffect(() => {\n    const url = 'http://ip-api.com/json';\n    Axios.get(url)\n      .then(function (res) {\n\n        const { city, country, lat, lon } = res.data;\n        setLocation({ position: { city, country, lat, lon } })\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }, []);\n\n  return (\n    <LocationContext.Provider\n      value={{ location, setCurrentLocation }}>\n      {props.children}\n    </LocationContext.Provider>\n  );\n}\nexport default LocationContextProvider;","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { LocationContext } from './locationContext';\nimport axios from 'axios'\n\nexport const CurrentWeatherContext = createContext();\n\nconst CurrentWeatherContextProvider = (props) => {\n\n    const locationContext = useContext(LocationContext);\n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [selectedDayWeather, setSelectedDayWeather] = useState(null);\n\n    useEffect(() => {\n        const location = locationContext.location;\n        if (location) {\n            let { lat, lon } = location.position\n            lat = lat ? lat : \"28.541100\";\n            lon = lon ? lon : \"77.281677\";\n\n            const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=e20f7d114a11a2d3a537edb503a94d4a`\n\n            axios.get(url)\n                .then(function (res) {\n                    let dailyData = res.data.daily.slice(0, 7);\n                    console.log(\"result123\", dailyData)\n                    setSelectedDayWeather(dailyData[0])\n                    setCurrentWeather({\n                        hourlyData: res.data.hourly,\n                        dailyData: dailyData\n                    })\n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n        }\n    }, [locationContext.location]);\n\n    return (\n        <CurrentWeatherContext.Provider\n            value={{ currentWeather, setCurrentWeather, selectedDayWeather, setSelectedDayWeather }}>\n            {props.children}\n        </CurrentWeatherContext.Provider>\n    );\n}\n\n\nexport default CurrentWeatherContextProvider;","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport moment from 'moment';\n\nconst DayCard = ({ dailyData, setSelectedDayWeather }) => {\n\n  const handleClick = (reading, i) => {\n    setSelectedDayWeather(reading);\n    setactive(i);\n  }\n\n  const [active, setactive] = useState(0);\n\n  const Cards = dailyData.map((reading, index) => {\n    let newDate = new Date();\n    const weekday = reading.dt * 1000;\n    newDate.setTime(weekday);\n    const maxCelsius = Math.round(reading.temp.max - 273.5);\n    const minCelsius = Math.round(reading.temp.min - 273.5);\n\n    const imgURL = `owf owf-${reading.weather[0].id} owf-5x`\n\n    return (\n      <div class=\"slider_children\" tabindex=\"0\" key={index}>\n        <Card style={{\n          margin: '5px 2px',\n          border: active === index ? '1px solid #0f6fff' : '',\n          display: 'inline-block',\n       \n        }}\n          onClick={() => handleClick(reading, index)}  >\n         \n          <CardContent>\n            <Typography style={{ fontSize: 14 }} color=\"textSecondary\" gutterBottom>\n              <h4 className=\"card-title\">{moment(newDate).format('dddd')}</h4>\n              <h6 className=\"card-title\">{moment(newDate).format('DD/MM/Y')}</h6>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <div><span>{maxCelsius + \"°\"}</span> <span>{minCelsius + \"°\"}</span></div>\n            </Typography>\n            <Typography style={{ marginBottom: 12, }} color=\"textSecondary\">\n              <i className={imgURL} alt=\"...\"\n                style={{ maxHeight: '80px' }} />\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {reading.weather[0].description}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              <label>wind speed : </label>\n              {reading.wind_speed}\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  })\n\n  return (\n    <div class=\"slider_component\">\n      <div class=\"slider\">\n        {Cards}\n      </div>\n    </div>\n  )\n}\n\nexport default DayCard;","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport moment from \"moment\";\nimport { Paper, Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nexport default class HourlyChart extends React.Component {\n\n    state = {\n\n        labels: [],\n        datasets: [\n            {\n\n                fill: false,\n                lineTension: 0.5,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [65, 59, 80, 81, 56]\n            }\n        ]\n    }\n\n\n    componentDidMount = () => {\n        const hourlyData = this.props.hourlyData\n        if (hourlyData) {\n            var x = 60; //minutes interval\n            var times = []; // time array\n            var tt = 0; // start time\n            var ap = ['AM', 'PM']; // AM-PM\n\n            //loop to increment the time and push results in array\n            for (var i = 0; tt < 24 * 60; i++) {\n                var hh = Math.floor(tt / 60); // getting hours of day in 0-24 format\n                times[i] = ((hh % 12)) + ap[Math.floor(hh / 12)]; // pushing data in array in [00:00 - 12:00 AM/PM format]\n                tt = tt + x;\n            }\n\n            let dataset = [];\n            let set = [];\n\n            hourlyData.forEach((hour, i) => {\n                if (i < 24) {\n                    const celsius = Math.round(hour.temp - 273.5);\n                    set.push(celsius);\n                }\n            });\n            dataset[0] = { ...this.state.datasets[0], data: set }\n            this.setState({ labels: times, datasets: dataset })\n        }\n    }\n\n\n    render() {\n        const { todayWeather } = this.props;\n        const { pressure, humidity, temp, weather, sunrise, sunset } = todayWeather;\n        const temp1 = Math.round(temp.eve - 273.5);\n        const imgURL = `owf owf-${weather[0].id} owf-5x`\n\n        return (\n\n            <Paper style={{ marginTop: \"1px\", padding: '15px', borderRadius: '10px' }} elevation={1} >\n                <Box style={{ display: 'flex', flexDirection: 'row', justifyContent: `start`, paddingTop: '10px' }}>\n                    <Typography variant={\"h3\"} style={{ fontWeight: '700' }}>{temp1 + \"°C\"}</Typography>\n                    <Typography style={{ marginLeft: '40px' }}>\n                        <i className={imgURL} alt=\"...\"\n                            style={{ maxHeight: '60px' }} />\n                    </Typography>\n                </Box>\n\n                <Box className='chart_container'>\n                    <Box class=\"slider_component\">\n                        <Box class=\"slider\">\n                            <Box className='slider_children'>\n                                <Line\n                                    data={this.state}\n                                    options={{\n                                        title: {\n                                            display: true,\n                                            fontSize: 20\n                                        },\n                                        maintainAspectRatio: true,\n                                        legend: {\n                                            display: false,\n                                        },\n                                        scales: {\n                                            yAxes: [{\n                                                display: false,\n                                                ticks: {\n                                                    suggestedMin: 20,\n                                                    suggestedMax: 45\n                                                }\n                                            }]\n                                            , gridLines: {\n                                                color: \"blue\"\n                                            },\n                                        },\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n\n                <Typography\n                    style={{\n                        display: 'flex', flexDirection: 'row',\n                        justifyContent: 'space-around', marginTop: '1px', marginBottom: '15px', textAlign: 'left'\n                    }}>\n                    <Paper variant=\"outlined\"\n                        style={{ padding: '10px', backgroundColor: \"rgb(239, 255, 251)\", width: '30%' }} >\n                        <Typography  >\n                            Pressure\n                        <Typography  >\n                                {pressure + \" hpa\"}\n                            </Typography>\n                        </Typography>\n                    </Paper>\n                    <Paper variant=\"outlined\" square\n                        style={{ padding: '10px', backgroundColor: 'rgb(239, 255, 251)', width: '30%' }}>\n                        <Typography  >\n                            Humidity\n                            </Typography>\n                        <Typography >\n                            {humidity + \" %\"}\n                        </Typography>\n                    </Paper>\n                </Typography>\n\n                <Typography style={{\n                    display: 'flex', flexDirection: 'row',\n                    justifyContent: 'space-between', marginTop: '1px',\n                    marginBottom: '15px', textAlign: 'left'\n                }}>\n                    <Paper variant=\"outlined\"\n                        style={{ padding: '15px 20px', }}>\n                        <img src={require(\"../assets/mountain_sunrise.png\")}\n                            alt=\"...\" style={{ width: '50px' }} />\n                        <Typography variant='h5'>\n                            Sunrise\n                        </Typography>\n\n                        <Typography variant='h6'>\n                            {moment.unix(sunrise).format('hh:mm a')}\n                        </Typography>\n                    </Paper>\n                    <Paper variant=\"outlined\" square\n                        style={{ padding: '15px 20px' }}>\n                        <img src={require(\"../assets/sunset.png\")} alt=\"...\" style={{ width: '50px' }} />\n                        <Typography variant='h5'>\n                            Sunset\n                            </Typography>\n                        <Typography variant='h6'>\n                            {moment.unix(sunset).format('hh:mm a')}\n                        </Typography>\n                    </Paper>\n                </Typography>\n            </Paper>\n\n\n        );\n    }\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport { TextField } from \"@material-ui/core\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst SearchButton = (props) => {\n  console.log(props);\n  const placeInputRef = useRef(null);\n\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n\n    let v = props.position.city + \" , \" + props.position.country\n    setValue(v)\n    initPlaceAPI();\n\n  }, []);\n\n  const initPlaceAPI = () => {\n\n    let autocomplete = new window.google.maps.places.Autocomplete(placeInputRef.current);\n    new window.google.maps.event.addListener(autocomplete, \"place_changed\", function () {\n      let place = autocomplete.getPlace();\n\n      const places = place.formatted_address.split(',');\n      const city = places[0];\n      const country = places[places.length - 1];\n      const position = {\n        lat: place.geometry.location.lat(),\n        lon: place.geometry.location.lng(),\n        city,\n        country\n      }\n      setValue()\n      props.setCurrentLocation(position);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <FormControl >\n        <TextField\n          id=\"input-with-icon-adornment\"\n          variant=\"outlined\"\n          onChange={e => setValue(e.target.value)}\n          value={value}\n          inputRef={placeInputRef}\n          InputProps={{\n            endAdornment: <LocationOnIcon />\n          }}\n        />\n      </FormControl>\n    </React.Fragment>\n  );\n};\n\nexport default SearchButton;","import React, { useContext } from 'react';\nimport DayCard from '../app_component/DayCard';\nimport HourlyChart from '../app_component/HourlyChart';\nimport { CurrentWeatherContext } from '../_context/currentWeatherContext';\nimport { CircularProgress } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { LocationContext } from '../_context/locationContext';\nimport SearchButton from '../app_component/SeachButton';\n\nconst AppContainer = () => {\n\n    var locationContext = useContext(LocationContext);\n    if(locationContext){\n        var { position } = locationContext.location\n    }\n   \n  \n\n    return (\n        <CurrentWeatherContext.Consumer>{\n            (context) => {\n               \n                    const currentWeather = context.currentWeather;\n                \n               \n                if (currentWeather) {\n                    const dailyData = currentWeather.dailyData\n                    const hourlyData = currentWeather.hourlyData\n                    const setSelectedDayWeather = context.setSelectedDayWeather;\n                    return (\n                        <Container>\n                             \n                            {!position ?\n                                <CircularProgress /> :\n                                <SearchButton position={position}\n                                    setCurrentLocation={locationContext.setCurrentLocation} />}\n                            <DayCard\n                                dailyData={dailyData}\n                                setSelectedDayWeather={setSelectedDayWeather}\n                            />\n                            <HourlyChart\n                                todayWeather={context.selectedDayWeather}\n                                hourlyData={hourlyData} />\n                        </Container>\n                    )\n                } else {\n                    return <CircularProgress size={50} />\n                }\n            }}\n        </CurrentWeatherContext.Consumer>\n    )\n}\n\nexport default AppContainer;","import React from \"react\";\nimport \"./App.css\";\nimport LocationContextProvider from \"./_context/locationContext\";\nimport CurrentWeatherContextProvider from \"./_context/currentWeatherContext\";\nimport { Typography } from \"@material-ui/core\";\nimport AppContainer from \"./container/appContainer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Typography variant='h4'>Weather App\n       \n        </Typography>\n        <LocationContextProvider>\n          <CurrentWeatherContextProvider>\n            <AppContainer />\n          </CurrentWeatherContextProvider>\n        </LocationContextProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}